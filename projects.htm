<html>

<head>
<meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
<meta http-equiv="x-ua-compatible" content="ie=edge">
<link rel="stylesheet" type="text/css" href="css/shared.css">
<link rel="stylesheet" type="text/css" href="css/projects.css">
<link rel="stylesheet" type="text/css" href="css/fonts.css">
<title>Projects</title>
<meta name="viewport" content="width=device-width, initial-scale=1, shrink-to-fit=no">
 </head>
 
<body onLoad="intialize()">

<script>
function intialize()
{
	//loadProjects();
}
</script>
  
<div id="background">
</div>

<div id="main">

<p id="logo">joe kenyon</p>

<ul id="nav-bar">
<li class="nav-item"><a href = "index.htm">Home</a></li>
<li class="nav-item"><a href = "projects.htm">Projects</a></li>
<li class="nav-item"><a href = "about.htm">About</a></li>
<li class="nav-item"><a href = "contact.htm">Contact</a></li>
<li class="nav-item"><a href = "index.htm">Extra</a></li>
</ul>

<div class="content-box">
<h1 class="contentTitle">Projects</h1>
<hr style="margin-top: 1.25rem;">
<p class="contentText">
Here is a list of some projects ive been working on.
Some of them are finished, some however, are not.
<br><br>
All my other projects, including these ones can be found on github, the link to that 
is on the contact page.
</p>
<br>
</div>



  
<div class="content-box">
<h2 class="contentTitle">[ ARMv7 ] ARMv7-Simple-cipher</h2>
<hr style="margin-top: 1.25rem;">
<p class="contentText">
A simple cipher in the ARMv7 assembly language.
<br><br>
The actual text to be encrypted/decrypted is passed to the program using standard input.
<br><br>
The program then returns its output using standard output.
<br><br>
The key lengths must be co-prime, and if this requirement is not met, the program will return the following error message, "Key lengths are not co-prime".
<br><br>
The source code for this project can be found
<b><a href="https://github.com/JoeBoiii72/ARMv7-Simple-cipher">here</a></b>.
</p>
<br>
</div>



<div class="content-box">
<h2 class="contentTitle">[ C++ ] Universal Infrared Remote</h2>
<hr style="margin-top: 1.25rem;">
<p class="contentText">
This was an embedded systems project for the STM32F746FG-DISCO board.
<br><br>
This project did not use an RTOS, and instead used a superloop.
<br><br>
The board can perform the following tasks:
<br>
- Recieve Infrared signals from any device.
<br>
- Save Infrared signals(until restart)
<br>
- Send Infrared signals inputted manually
<br>
- Send Infrared signals that were received.
<br><br>
The source code for this project can be found
<b><a href="https://github.com/JoeBoiii72/EmbeddedSystems">here</a></b>.
</p>
<br>
</div>




<div class="content-box">
<h2 class="contentTitle">[ C++ ] Chip 8 Emulator</h2>
<hr style="margin-top: 1.25rem;">
<p class="contentText">
This is a CHIP8 virtual machine that allows you to run programs written in CHIP8.
<br><br>
To render graphics on screen i used SDL2, a cross platfom HAL library that gives access to audio, mouse, joystick etc. hardware.
<br><br>
The pixel size can be determined via the command line, aswell as the ROM to be loaded.
<br><br>
The source code for this project can be found
<b><a href="https://github.com/JoeBoiii72/Chip8Emulator">here</a></b>.
</p>
<br>
</div>




<div class="content-box">
<h2 class="contentTitle">[ C ] Thread Safe Memory Manager</h2>
<hr style="margin-top: 1.25rem;">
<p class="contentText">
A memory manager, or simply, my implementation of "alloc()" and "free()".
<br><br>
Memory is managed using a linked list, a list of both free and used 
memory chunks are contained within. If two adjencet blocks 
are free, they will be merged.
<br><br>
I used the pthreads library and utilized mutex locks to made the implementation thread safe.
<br><br>
You may also specify the allocation algorithm used, i.e. First-Fit, Best-Fit, Next-Fit.
<br><br>
The source code for this project can be found
<b><a href="https://github.com/JoeBoiii72/Thread-Safe-Memory-Manager">here</a></b>.
</p>
<br>
</div>






</div>
</body>
</html>